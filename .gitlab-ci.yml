cache:
  paths:
    - vtk-install/
    - build/

stages:
  - update-vtk
  - configure
  - build
  - test
  - package

.linux:
  tags:
    - linux

.windows:
  tags:
    - windows

.osx:
  tags:
    - osx

# VTK
.update-vtk:
  stage: update-vtk
  script:
    - cmake -E make_directory vtk-install
    - git clone https://gitlab.kitware.com/vtk/vtk.git
    - cd vtk
    - git checkout 28b97c484e419f814f88a13876a97d93c68d581a
    - cmake -E make_directory build
    - cd build
    - cmake $BUILD_ARCHITECTURE $ADDITIONAL_OPTIONS
      -DVTK_BUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Release
      -DVTK_LEGACY_REMOVE=ON -DBUILD_SHARED_LIBS=OFF
      -DCMAKE_INSTALL_PREFIX:FILEPATH=../../vtk-install
      -DVTK_GROUP_ENABLE_Rendering=DEFAULT -DVTK_GROUP_ENABLE_StandAlone=DEFAULT
      -DVTK_MODULE_ENABLE_VTK_FiltersGeneral=YES
      -DVTK_MODULE_ENABLE_VTK_FiltersGeometry=YES
      -DVTK_MODULE_ENABLE_VTK_ImagingCore=YES
      -DVTK_MODULE_ENABLE_VTK_ImagingHybrid=YES
      -DVTK_MODULE_ENABLE_VTK_InteractionStyle=YES
      -DVTK_MODULE_ENABLE_VTK_InteractionWidgets=YES
      -DVTK_MODULE_ENABLE_VTK_IOCityGML=YES
      -DVTK_MODULE_ENABLE_VTK_IOGeometry=YES
      -DVTK_MODULE_ENABLE_VTK_IOImage=YES
      -DVTK_MODULE_ENABLE_VTK_IOImport=YES
      -DVTK_MODULE_ENABLE_VTK_IOParallel=YES
      -DVTK_MODULE_ENABLE_VTK_IOPLY=YES
      -DVTK_MODULE_ENABLE_VTK_IOXML=YES
      -DVTK_MODULE_ENABLE_VTK_RenderingAnnotation=YES
      -DVTK_MODULE_ENABLE_VTK_RenderingCore=YES
      -DVTK_MODULE_ENABLE_VTK_RenderingLabel=YES
      -DVTK_MODULE_ENABLE_VTK_RenderingOpenGL2=YES
      -DVTK_MODULE_ENABLE_VTK_RenderingVolumeOpenGL2=YES
      -DVTK_MODULE_ENABLE_VTK_jsoncpp=YES
      ..
    - cmake --build . --config Release --parallel 4
    - cmake --build . --config Release --target install
  only:
    - web

update-vtk-linux:
  extends:
    - .update-vtk
    - .linux
  variables:
    ADDITIONAL_OPTIONS: -DVTK_USE_X=ON

update-vtk-windows:
  extends:
    - .update-vtk
    - .windows
  variables:
    BUILD_ARCHITECTURE: -Ax64

update-vtk-osx:
  extends:
    - .update-vtk
    - .osx
  variables:
    ADDITIONAL_OPTIONS: -DVTK_USE_COCOA=ON

# Configure
.configure:
  stage: configure
  script:
    - cmake -E make_directory build
    - cd build
    - cmake $BUILD_ARCHITECTURE $ADDITIONAL_OPTIONS -DBUILD_TESTING=ON -F3D_STRICT_BUILD=ON
      -DCMAKE_BUILD_TYPE=Release -DVTK_DIR:FILEPATH=vtk-install/lib/cmake/vtk-9.0
      -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE=ON ..

configure-linux:
  extends:
    - .configure
    - .linux
  variables:
    ADDITIONAL_OPTIONS: -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX=ON

configure-windows:
  extends:
    - .configure
    - .windows
  variables:
    BUILD_ARCHITECTURE: -Ax64
    ADDITIONAL_OPTIONS: -DWINDOWS_BUILD_WIN32=ON

configure-osx:
  extends:
    - .configure
    - .osx
  variables:
    ADDITIONAL_OPTIONS: -DMACOSX_BUILD_BUNDLE=ON

# Build
.build:
  stage: build
  script:
    - cmake --build build --config Release --parallel 4

build-linux:
  extends:
    - .build
    - .linux
  needs:
    - configure-linux

build-windows:
  extends:
    - .build
    - .windows
  needs:
    - configure-windows

build-osx:
  extends:
    - .build
    - .osx
  needs:
    - configure-osx

# Test
.test:
  stage: test
  script:
    - cd build
    - cmake -E remove Test*.png
    - ctest -C Release -j 8 --output-on-failure
  artifacts:
    when: on_failure
    paths:
      - build/Test*.png

test-linux:
  extends:
    - .test
    - .linux
  needs:
    - configure-linux
    - build-linux

test-windows:
  extends:
    - .test
    - .windows
  needs:
    - configure-windows
    - build-windows

test-osx:
  extends:
    - .test
    - .osx
  needs:
    - configure-osx
    - build-osx

# Package
.package:
  stage: package
  script:
    - cd build
    - cmake -E remove f3d-*
    - cpack -C Release

package-linux:
  extends:
    - .package
    - .linux
  needs:
    - configure-linux
    - build-linux
    - test-linux
  artifacts:
    paths:
      - build/f3d-*.tar.gz
      - build/f3d-*.tar.xz

package-windows:
  extends:
    - .package
    - .windows
  needs:
    - configure-windows
    - build-windows
    - test-windows
  artifacts:
    paths:
      - build/f3d-*.zip
      - build/f3d-*.exe

package-osx:
  extends:
    - .package
    - .osx
  needs:
    - configure-osx
    - build-osx
    - test-osx
  artifacts:
    paths:
      - build/f3d-*.dmg
